rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isUser(uid) {
      return isAuth() && request.auth.uid == uid;
    }
    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }
    function isOperator() {
        return isAuth() && (isAdmin() || (request.auth.token.operator == true || !request.auth.token.admin));
    }
    function isUnit() {
        return isAuth() && request.auth.token.unit == true;
    }

    // `users` collection: For admin panel user metadata.
    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow create: if isAuth(); // Anyone can create their own user doc on register
      allow update: if isAdmin(); // Only admins can update roles/stations
      allow delete: if isAdmin();
    }

    // `medicalInfo` collection: For mobile app user medical data.
    match /medicalInfo/{userId} {
      // User can manage their own data.
      allow read, create, update: if isUser(userId);
      // Admin/Operators can read data for an alert.
      // This is a broad read, but it's protected by the fact that they only get the userId from an alert they have access to.
      allow get: if isAdmin() || isOperator() || isUnit();
    }
    
    // `stations` and their subcollections
    match /stations/{stationId} {
      // Anyone authenticated can read station info (for dropdowns etc)
      allow read: if isAuth();
      // Only admins can modify stations
      allow create, update, delete: if isAdmin();

      // Units subcollection
      match /unidades/{unitId} {
         allow read: if isAuth();
         allow create, update, delete: if isAdmin();
      }
    }

    // `alerts` collection: The core of the application.
    match /alerts/{alertId} {
      // Any user (including anonymous) can create an alert.
      allow create: if isAuth();

      // Read/Update rules are role-based.
      allow read, update: if 
          // Admins can do anything.
          isAdmin() ||
          // Operators can read/update alerts assigned to their station.
          (isOperator() && request.auth.token.stationId != null && resource.data.assignedStationId == request.auth.token.stationId) ||
          // Units can read/update alerts assigned to them that are in an active state.
          // This rule MUST match the query in `mission/page.tsx`.
          (isUnit() && request.auth.token.unitId != null && resource.data.assignedUnitId == request.auth.token.unitId && resource.data.status in ['assigned', 'en_route', 'on_scene', 'attending', 'transporting']) ||
          // The user who created the alert can read it or cancel it.
          (isUser(resource.data.userId));
          
      // Delete is restricted. Alerts should be marked 'cancelled' or 'resolved'.
      allow delete: if false; 
    }
  }
}
